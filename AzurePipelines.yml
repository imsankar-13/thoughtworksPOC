variables:
  imageRepository: 'wikimedia'
  containerRegistry: 'wikimediaacr01.azurecr.io'

stages:
- stage: build
  jobs:
  - job: 'BuildAndPush'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'ACR'
        repository: 'wikimedia'
        command: 'buildAndPush'
        Dockerfile: '**/DockerFile'
        tags: $(Build.BuildId)
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'manifests'
        targetPath: $(Build.SourcesDirectory)
  
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'
          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'AKSDEV-AKSPOCAKS01-default-1602222690815'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: 'akssecret'
              dockerRegistryEndpoint: 'ACR'

          - task: KubernetesManifest@0
            displayName: Deploy  to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'AKSDEV-AKSPOCAKS01-default-1602222690815'
              namespace: 'default'
              manifests: '$(System.ArtifactsDirectory)/manifests/AKSdeployment.yml'
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: 'akssecret'